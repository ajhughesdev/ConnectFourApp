@inject ConnectFourApp.Shared.State State

<div class="page-container">

<header>
    <nav class="nav-menu">
        <button type="button">menu</button>
        <img src="./assets/images/logo.svg" alt="logo" class="logo" />
        <button @onclick="@ResetGame">restart</button>
    </nav>
</header>

<div class="play-menu">
    <span class=@($"marker{State.CurrentPlayer} a") @onclick="() => PlayPiece(0)"></span>
    <span class=@($"marker{State.CurrentPlayer} b") @onclick="() => PlayPiece(1)"></span>
    <span class=@($"marker{State.CurrentPlayer} c") @onclick="() => PlayPiece(2)"></span>
    <span class=@($"marker{State.CurrentPlayer} d") @onclick="() => PlayPiece(3)"></span>
    <span class=@($"marker{State.CurrentPlayer} e") @onclick="() => PlayPiece(4)"></span>
    <span class=@($"marker{State.CurrentPlayer} f") @onclick="() => PlayPiece(5)"></span>
    <span class=@($"marker{State.CurrentPlayer} g") @onclick="() => PlayPiece(6)"></span>
</div>

<main>
        <div class="player-board">
                <img src="./assets/images/player-one.svg" alt="" class="player-board-img" />
                <p>player 1</p>
                <p>0</p>
        </div>

        <div class="board-container">
        <img src="./assets/images/board-layer-black-large.svg" class="board-layer_black" alt="" />
        <div class="board">
                @for (var i = 0; i < 42; i++)
                {
                <span class="board-cell"><span></span></span>
                }

        </div>

        @for (var i = 0; i < 42; i++)
        {
                <span class="@Chips[i]"></span>
        }

        <img src="./assets/images/board-layer-white-large.svg" class="board-layer_white" alt="" />
        </div>

        <div class="player-board">
                <img src="./assets/images/player-two.svg" alt="" class="player-board-img" />
                <p>player 2</p>
                <p>0</p>
        </div>
</main>

<div class="your-turn">

        <svg width="197" height="165" viewBox="0 0 197 165" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g filter="url(#filter0_d_5_5704)">
                <path class=@($"your-turn_fill{State.CurrentPlayer}") fill-rule="evenodd" clip-rule="evenodd" d="M3 55.2795C3 47.2326 7.82258 39.9694 15.2389 36.8468L90.2793 5.25082C95.2186 3.17114 100.786 3.16075 105.733 5.22198L181.692 36.8718C189.145 39.9772 194 47.2593 194 55.3333V132C194 143.046 185.046 152 174 152H23C11.9543 152 3 143.046 3 132V55.2795Z" />
                <path d="M14.6568 35.4643C6.68427 38.8212 1.5 46.6291 1.5 55.2795V132C1.5 143.874 11.1259 153.5 23 153.5H174C185.874 153.5 195.5 143.874 195.5 132V55.3333C195.5 46.6538 190.281 38.8255 182.269 35.4872L106.31 3.83737C100.992 1.62154 95.0069 1.63271 89.6972 3.86836L14.6568 35.4643Z" stroke="black" stroke-width="3" />
                </g>
                <defs>
                <filter id="filter0_d_5_5704" x="0" y="0.683517" width="197" height="164.316" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                        <feFlood flood-opacity="0" result="BackgroundImageFix" />
                        <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                        <feOffset dy="10" />
                        <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
                        <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5_5704" />
                        <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5_5704" result="shape" />
                </filter>
                </defs>
                <g class=@($"your-turn_gfill{State.CurrentPlayer}") font-family="Space Grotesk, Space Grotesk-fallback, sans-serif" font-weight="700">
                <text font-size="16" transform="translate(31 41)">
                        <tspan x="1.64" y="16">@($"PLAYER {State.CurrentPlayer}'S TURN")</tspan>
                </text>
                <text font-size="56" transform="translate(51 41)">
                        <tspan x=".872" y="77">30s</tspan>
                </text>
                </g>
        </svg>

</div>

</div>

@code {

        private string[] Chips = new string[42];

        protected override void OnInitialized()
        {
                State.ResetBoard();
        }

        private void PlayPiece(byte column)
        {
                var playedCell = State.PlayPiece(column);
                var addCssClass = $"player{State.CurrentPlayer} column{column} drop{playedCell}";
                Chips[State.CurrentTurn - 1] = addCssClass;
        }

        void ResetGame()
        {
                State.ResetBoard();
                Chips = new string[42];
        }

}