@page "/player"
@inject HttpClient Client
@inject IJSRuntime Js

<h3>Players</h3>
<small>Add as many players as you wish.</small>
<div>
    <a href="https://ajhughesdev.github.io/ConnectFourApp/player/create">Create New</a>
</div>
<br />

@if (Players == null)
{
    <text>Loading...</text>
}
else if (Players.Length == 0)
{
    <text>No Records Found.</text>
}
else
{
    <table>
        <thead>
            <tr>
                <th>Id</th>
                <th>Initials</th>
                <th>Score</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var player in Players)
            {
                <tr>
                    <td>@player.Id</td>
                    <td>@player.Initials</td>
                    <td>@player.Score</td>
                    <td>
                        <a href="https://ajhughesdev.github.io/ConnectFourApp/player/edit/@player.Id">Edit</a>
                        <button @onclick="@(() => Delete(player.Id))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    Player[] Players { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Players = await Client.GetFromJsonAsync<Player[]>("api/player");
    }

    async Task Delete(int playerId)
    {
        var player = Players.First(x => x.Id == playerId);
        if (await Js.InvokeAsync<bool>("confirm", $"Do you want to delete {player.Initials}'s ({player.Id}) Record?"))
        {
            await Client.DeleteAsync($"api/player/{playerId}");
            await OnInitializedAsync();
        }
    }
}